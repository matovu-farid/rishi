/**
 * Auto-generated TypeScript types for Tauri commands
 * Generated by tauri-plugin-typegen
 * Do not edit manually - regenerate using: cargo tauri-typegen generate
 */

import { z } from 'zod';

export const BookDataSchema = z.object({
  id: z.string(),
  cover: z.array(z.number()),
  title: z.string().optional(),
  author: z.string().optional(),
  publisher: z.string().optional(),
  epubPath: z.string(),
  current_location: z.string(),
});

export const GetBookDataParamsSchema = z.object({
  epubPath: z.string(),
});

export const GreetParamsSchema = z.object({
  name: z.string(),
});

export const UnzipParamsSchema = z.object({
  file_path: z.string(),
  out_dir: z.string(),
});

export type GetBookDataParams = z.infer<typeof GetBookDataParamsSchema>;

export type GreetParams = z.infer<typeof GreetParamsSchema>;

export type UnzipParams = z.infer<typeof UnzipParamsSchema>;

export type BookData = z.infer<typeof BookDataSchema>;

